<module name='ORP'><comment><comment-body>N. Wirth 1.7.97 / 8.3.2020  Oberon compiler for RISC in Oberon-07</comment-body></comment><ImportList><import><ident>Texts</ident></import><import><ident>Oberon</ident></import><import><ident>ORS</ident></import><import><ident>ORB</ident></import><import><ident>ORG</ident></import><comment><comment-body>Author: Niklaus Wirth, 2014.
    Parser of Oberon-RISC compiler. Uses Scanner ORS to obtain symbols (tokens),
    ORB for definition of data structures and for handling import and export, and
    ORG to produce binary code. ORP performs type checking and data allocation.
    Parser is target-independent, except for part of the handling of allocations.</comment-body></comment></ImportList><DeclarationSequence><TypeDeclaration><identdef ident='PtrBase'/><StrucType><PointerType><type><qualident ident='PtrBaseDesc'/></type></PointerType></StrucType></TypeDeclaration><TypeDeclaration><identdef ident='PtrBaseDesc'/><StrucType><RecordType><comment><comment-body>list of names of pointer base types</comment-body></comment><FieldListSequence><FieldList><IdentList><identdef ident='name'/></IdentList><type><qualident qualifier='ORS' ident='Ident'/></type></FieldList><FieldList><IdentList><identdef ident='type'/></IdentList><type><qualident qualifier='ORB' ident='Type'/></type></FieldList><FieldList><IdentList><identdef ident='next'/></IdentList><type><qualident ident='PtrBase'/></type></FieldList></FieldListSequence></RecordType></StrucType></TypeDeclaration><VariableDeclaration><IdentList><identdef ident='sym'/></IdentList><type><qualident ident='INTEGER'/></type></VariableDeclaration><comment><comment-body>last symbol read</comment-body></comment><VariableDeclaration><IdentList><identdef ident='dc'/></IdentList><type><qualident ident='LONGINT'/></type></VariableDeclaration><comment><comment-body>data counter</comment-body></comment><VariableDeclaration><IdentList><identdef ident='level'/><identdef ident='exno'/><identdef ident='version'/></IdentList><type><qualident ident='INTEGER'/></type></VariableDeclaration><VariableDeclaration><IdentList><identdef ident='newSF'/></IdentList><type><qualident ident='BOOLEAN'/></type></VariableDeclaration><comment><comment-body>option flag</comment-body></comment><VariableDeclaration><IdentList><identdef ident='expression'/></IdentList><type><StrucType><ProcedureType><FormalParameters><FPSection><ident>x</ident><FormalType><qualident qualifier='ORG' ident='Item'/></FormalType></FPSection></FormalParameters></ProcedureType></StrucType></type></VariableDeclaration><comment><comment-body>to avoid forward reference</comment-body></comment><VariableDeclaration><IdentList><identdef ident='Type'/></IdentList><type><StrucType><ProcedureType><FormalParameters><FPSection><ident>type</ident><FormalType><qualident qualifier='ORB' ident='Type'/></FormalType></FPSection></FormalParameters></ProcedureType></StrucType></type></VariableDeclaration><VariableDeclaration><IdentList><identdef ident='FormalType'/></IdentList><type><StrucType><ProcedureType><FormalParameters><FPSection><ident>typ</ident><FormalType><qualident qualifier='ORB' ident='Type'/></FormalType></FPSection><FPSection><ident>dim</ident><FormalType><qualident ident='INTEGER'/></FormalType></FPSection></FormalParameters></ProcedureType></StrucType></type></VariableDeclaration><VariableDeclaration><IdentList><identdef ident='modid'/></IdentList><type><qualident qualifier='ORS' ident='Ident'/></type></VariableDeclaration><VariableDeclaration><IdentList><identdef ident='pbsList'/></IdentList><type><qualident ident='PtrBase'/></type></VariableDeclaration><comment><comment-body>list of names of pointer base types</comment-body></comment><VariableDeclaration><IdentList><identdef ident='dummy'/></IdentList><type><qualident qualifier='ORB' ident='Object'/></type></VariableDeclaration><VariableDeclaration><IdentList><identdef ident='W'/></IdentList><type><qualident qualifier='Texts' ident='Writer'/></type></VariableDeclaration><ProcedureDeclaration><ProcedureHeading><identdef ident='Check'/><FormalParameters><FPSection><ident>s</ident><FormalType><qualident ident='INTEGER'/></FormalType></FPSection><FPSection><ident>msg</ident><FormalType><qualident ident='CHAR'/></FormalType></FPSection></FormalParameters></ProcedureHeading><ProcedureBody><DeclarationSequence/><StatementSequence><IfStatement><Condition><expression><designator ident='sym'/><EQL/><designator ident='s'/></expression></Condition><Then-Statements><ProcedureCall><designator left='ORS' right='Get'/><ActualParameters><designator ident='sym'/></ActualParameters></ProcedureCall></Then-Statements><Else-Statements><ProcedureCall><designator left='ORS' right='Mark'/><ActualParameters><designator ident='msg'/></ActualParameters></ProcedureCall></Else-Statements></IfStatement></StatementSequence></ProcedureBody><ident>Check</ident></ProcedureDeclaration><ProcedureDeclaration><ProcedureHeading><identdef ident='qualident'/><FormalParameters><FPSection><ident>obj</ident><FormalType><qualident qualifier='ORB' ident='Object'/></FormalType></FPSection></FormalParameters></ProcedureHeading><ProcedureBody><DeclarationSequence/><StatementSequence><assignment><designator ident='obj'/><factor><designator left='ORB' right='thisObj'/><ActualParameters/></factor></assignment><ProcedureCall><designator left='ORS' right='Get'/><ActualParameters><designator ident='sym'/></ActualParameters></ProcedureCall><IfStatement><Condition><expression><designator ident='obj'/><EQL/><designator ident='NIL'/></expression></Condition><Then-Statements><ProcedureCall><designator left='ORS' right='Mark'/><ActualParameters><string>undef</string></ActualParameters></ProcedureCall><assignment><designator ident='obj'/><designator ident='dummy'/></assignment></Then-Statements></IfStatement><IfStatement><Condition><term><expression><designator ident='sym'/><EQL/><designator left='ORS' right='period'/></expression><AND/><expression><designator left='obj' right='class'/><EQL/><designator left='ORB' right='Mod'/></expression></term></Condition><Then-Statements><ProcedureCall><designator left='ORS' right='Get'/><ActualParameters><designator ident='sym'/></ActualParameters></ProcedureCall><IfStatement><Condition><expression><designator ident='sym'/><EQL/><designator left='ORS' right='ident'/></expression></Condition><Then-Statements><assignment><designator ident='obj'/><factor><designator left='ORB' right='thisimport'/><ActualParameters><designator ident='obj'/></ActualParameters></factor></assignment><ProcedureCall><designator left='ORS' right='Get'/><ActualParameters><designator ident='sym'/></ActualParameters></ProcedureCall><IfStatement><Condition><expression><designator ident='obj'/><EQL/><designator ident='NIL'/></expression></Condition><Then-Statements><ProcedureCall><designator left='ORS' right='Mark'/><ActualParameters><string>undef</string></ActualParameters></ProcedureCall><assignment><designator ident='obj'/><designator ident='dummy'/></assignment></Then-Statements></IfStatement></Then-Statements><Else-Statements><ProcedureCall><designator left='ORS' right='Mark'/><ActualParameters><string>identifier expected</string></ActualParameters></ProcedureCall><assignment><designator ident='obj'/><designator ident='dummy'/></assignment></Else-Statements></IfStatement></Then-Statements></IfStatement></StatementSequence></ProcedureBody><ident>qualident</ident></ProcedureDeclaration><ProcedureDeclaration><ProcedureHeading><identdef ident='CheckBool'/><FormalParameters><FPSection><ident>x</ident><FormalType><qualident qualifier='ORG' ident='Item'/></FormalType></FPSection></FormalParameters></ProcedureHeading><ProcedureBody><DeclarationSequence/><StatementSequence><IfStatement><Condition><expression><designator left='x' right='type'><field-ref ident='form'/></designator><NEQ/><designator left='ORB' right='Bool'/></expression></Condition><Then-Statements><ProcedureCall><designator left='ORS' right='Mark'/><ActualParameters><string>not Boolean</string></ActualParameters></ProcedureCall><assignment><designator left='x' right='type'/><designator left='ORB' right='boolType'/></assignment></Then-Statements></IfStatement></StatementSequence></ProcedureBody><ident>CheckBool</ident></ProcedureDeclaration><ProcedureDeclaration><ProcedureHeading><identdef ident='CheckInt'/><FormalParameters><FPSection><ident>x</ident><FormalType><qualident qualifier='ORG' ident='Item'/></FormalType></FPSection></FormalParameters></ProcedureHeading><ProcedureBody><DeclarationSequence/><StatementSequence><IfStatement><Condition><expression><designator left='x' right='type'><field-ref ident='form'/></designator><NEQ/><designator left='ORB' right='Int'/></expression></Condition><Then-Statements><ProcedureCall><designator left='ORS' right='Mark'/><ActualParameters><string>not Integer</string></ActualParameters></ProcedureCall><assignment><designator left='x' right='type'/><designator left='ORB' right='intType'/></assignment></Then-Statements></IfStatement></StatementSequence></ProcedureBody><ident>CheckInt</ident></ProcedureDeclaration><ProcedureDeclaration><ProcedureHeading><identdef ident='CheckSet'/><FormalParameters><FPSection><ident>x</ident><FormalType><qualident qualifier='ORG' ident='Item'/></FormalType></FPSection></FormalParameters></ProcedureHeading><ProcedureBody><DeclarationSequence/><StatementSequence><IfStatement><Condition><expression><designator left='x' right='type'><field-ref ident='form'/></designator><NEQ/><designator left='ORB' right='Set'/></expression></Condition><Then-Statements><ProcedureCall><designator left='ORS' right='Mark'/><ActualParameters><string>not Set</string></ActualParameters></ProcedureCall><assignment><designator left='x' right='type'/><designator left='ORB' right='setType'/></assignment></Then-Statements></IfStatement></StatementSequence></ProcedureBody><ident>CheckSet</ident></ProcedureDeclaration><ProcedureDeclaration><ProcedureHeading><identdef ident='CheckSetVal'/><FormalParameters><FPSection><ident>x</ident><FormalType><qualident qualifier='ORG' ident='Item'/></FormalType></FPSection></FormalParameters></ProcedureHeading><ProcedureBody><DeclarationSequence/><StatementSequence><IfStatement><Condition><expression><designator left='x' right='type'><field-ref ident='form'/></designator><NEQ/><designator left='ORB' right='Int'/></expression></Condition><Then-Statements><ProcedureCall><designator left='ORS' right='Mark'/><ActualParameters><string>not Int</string></ActualParameters></ProcedureCall><assignment><designator left='x' right='type'/><designator left='ORB' right='setType'/></assignment></Then-Statements><Condition><expression><designator left='x' right='mode'/><EQL/><designator left='ORB' right='Const'/></expression></Condition><Then-Statements><IfStatement><Condition><SimpleExpression><expression><designator left='x' right='a'/><LSS/><integer>0</integer></expression><OR/><expression><designator left='x' right='a'/><GEQ/><integer>32</integer></expression></SimpleExpression></Condition><Then-Statements><ProcedureCall><designator left='ORS' right='Mark'/><ActualParameters><string>invalid set</string></ActualParameters></ProcedureCall></Then-Statements></IfStatement></Then-Statements></IfStatement></StatementSequence></ProcedureBody><ident>CheckSetVal</ident></ProcedureDeclaration></DeclarationSequence><StatementSequence><ProcedureCall><designator left='Texts' right='OpenWriter'/><ActualParameters><designator ident='W'/></ActualParameters></ProcedureCall><ProcedureCall><designator left='Texts' right='WriteString'/><ActualParameters><designator ident='W'/><string>OR Compiler  8.3.2020</string></ActualParameters></ProcedureCall><ProcedureCall><designator left='Texts' right='WriteLn'/><ActualParameters><designator ident='W'/></ActualParameters></ProcedureCall><ProcedureCall><designator left='Texts' right='Append'/><ActualParameters><designator left='Oberon' right='Log'/><designator left='W' right='buf'/></ActualParameters></ProcedureCall><ProcedureCall><designator ident='NEW'/><ActualParameters><designator ident='dummy'/></ActualParameters></ProcedureCall><assignment><designator left='dummy' right='class'/><designator left='ORB' right='Var'/></assignment><assignment><designator left='dummy' right='type'/><designator left='ORB' right='intType'/></assignment><assignment><designator ident='expression'/><designator ident='expression0'/></assignment><assignment><designator ident='Type'/><designator ident='Type0'/></assignment><assignment><designator ident='FormalType'/><designator ident='FormalType0'/></assignment></StatementSequence><END_MODULE name='ORP'/></module>