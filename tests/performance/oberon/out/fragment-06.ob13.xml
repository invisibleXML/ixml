<module name='ORP'><comment><comment-body>N. Wirth 1.7.97 / 8.3.2020  Oberon compiler for RISC</comment-body></comment><ImportList><import><ident>Texts</ident></import><import><ident>Oberon</ident></import><import><ident>ORS</ident></import><import><ident>ORB</ident></import><import><ident>ORG</ident></import><comment><comment-body>Author: Niklaus Wirth, 2014.
    Parser of Oberon-RISC compiler. Uses Scanner ORS to obtain symbols (tokens),
    ORB for definition of data structures and for handling import and export, and
    ORG to produce binary code. ORP performs type checking and data allocation.</comment-body></comment></ImportList><DeclarationSequence><TypeDeclaration><identdef ident='PtrBase'/><StrucType><PointerType><type><qualident ident='PtrBaseDesc'/></type></PointerType></StrucType></TypeDeclaration><TypeDeclaration><identdef ident='PtrBaseDesc'/><StrucType><RecordType><comment><comment-body>list of names of pointer base types</comment-body></comment><FieldListSequence><FieldList><IdentList><identdef ident='name'/></IdentList><type><qualident qualifier='ORS' ident='Ident'/></type></FieldList><FieldList><IdentList><identdef ident='type'/></IdentList><type><qualident qualifier='ORB' ident='Type'/></type></FieldList><FieldList><IdentList><identdef ident='next'/></IdentList><type><qualident ident='PtrBase'/></type></FieldList></FieldListSequence></RecordType></StrucType></TypeDeclaration><VariableDeclaration><IdentList><identdef ident='sym'/></IdentList><type><qualident ident='INTEGER'/></type></VariableDeclaration><comment><comment-body>last symbol read</comment-body></comment><VariableDeclaration><IdentList><identdef ident='dc'/></IdentList><type><qualident ident='LONGINT'/></type></VariableDeclaration><comment><comment-body>data counter</comment-body></comment><VariableDeclaration><IdentList><identdef ident='level'/><identdef ident='exno'/><identdef ident='version'/></IdentList><type><qualident ident='INTEGER'/></type></VariableDeclaration><VariableDeclaration><IdentList><identdef ident='newSF'/></IdentList><type><qualident ident='BOOLEAN'/></type></VariableDeclaration><comment><comment-body>option flag</comment-body></comment><VariableDeclaration><IdentList><identdef ident='expression'/></IdentList><type><StrucType><ProcedureType><FormalParameters><FPSection><ident>x</ident><FormalType><qualident qualifier='ORG' ident='Item'/></FormalType></FPSection></FormalParameters></ProcedureType></StrucType></type></VariableDeclaration><comment><comment-body>to avoid forward reference</comment-body></comment><VariableDeclaration><IdentList><identdef ident='Type'/></IdentList><type><StrucType><ProcedureType><FormalParameters><FPSection><ident>type</ident><FormalType><qualident qualifier='ORB' ident='Type'/></FormalType></FPSection></FormalParameters></ProcedureType></StrucType></type></VariableDeclaration><VariableDeclaration><IdentList><identdef ident='FormalType'/></IdentList><type><StrucType><ProcedureType><FormalParameters><FPSection><ident>typ</ident><FormalType><qualident qualifier='ORB' ident='Type'/></FormalType></FPSection><FPSection><ident>dim</ident><FormalType><qualident ident='INTEGER'/></FormalType></FPSection></FormalParameters></ProcedureType></StrucType></type></VariableDeclaration><VariableDeclaration><IdentList><identdef ident='modid'/></IdentList><type><qualident qualifier='ORS' ident='Ident'/></type></VariableDeclaration><VariableDeclaration><IdentList><identdef ident='pbsList'/></IdentList><type><qualident ident='PtrBase'/></type></VariableDeclaration><comment><comment-body>list of names of pointer base types</comment-body></comment><VariableDeclaration><IdentList><identdef ident='dummy'/></IdentList><type><qualident qualifier='ORB' ident='Object'/></type></VariableDeclaration><VariableDeclaration><IdentList><identdef ident='W'/></IdentList><type><qualident qualifier='Texts' ident='Writer'/></type></VariableDeclaration></DeclarationSequence><StatementSequence><ProcedureCall><designator left='Texts' right='OpenWriter'/><ActualParameters><designator ident='W'/></ActualParameters></ProcedureCall><ProcedureCall><designator left='Texts' right='WriteString'/><ActualParameters><designator ident='W'/><string>OR Compiler  8.3.2020</string></ActualParameters></ProcedureCall><ProcedureCall><designator left='Texts' right='WriteLn'/><ActualParameters><designator ident='W'/></ActualParameters></ProcedureCall><ProcedureCall><designator left='Texts' right='Append'/><ActualParameters><designator left='Oberon' right='Log'/><designator left='W' right='buf'/></ActualParameters></ProcedureCall><ProcedureCall><designator ident='NEW'/><ActualParameters><designator ident='dummy'/></ActualParameters></ProcedureCall><assignment><designator left='dummy' right='class'/><designator left='ORB' right='Var'/></assignment><assignment><designator left='dummy' right='type'/><designator left='ORB' right='intType'/></assignment><assignment><designator ident='expression'/><designator ident='expression0'/></assignment><assignment><designator ident='Type'/><designator ident='Type0'/></assignment><assignment><designator ident='FormalType'/><designator ident='FormalType0'/></assignment></StatementSequence><END_MODULE name='ORP'/></module>