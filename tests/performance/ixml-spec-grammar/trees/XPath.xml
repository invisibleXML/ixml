<ixml><comment> file: XPath.reducedTree.ixml </comment><comment>    
    An iXML grammar for XPath 3.1
    
    Source file: XPath.decorated.ixml
    John Lumley 2022jun30
    
    This is an iXML grammar for XPath3.1 expressions, 
    the original source of which has additionally been 
    decorated with pragmas ([jl:opt]) on rule declarations to indicate where a 
    'reduced tree' form would be preferable - i.e. if a serialized element has a
    single element child, and no attributes, its tags can be omitted from the result -
    this ensures that small expressions, such as '1+2', present as the minimal 
    parse tree necessary to identify it uniquely.
    
    Automatically generated versions of this file without the pragmas are available
    to run on a conformant iXML version 1.0 processor:    
    *  XPath.ixml - will produce the 'full' parse tree for successfully parsed expressions.
    *  XPath.reducedTree.ixml - has the ruleset transformed such that it will produce the
       minimal reduced parse for successfully parsed expressions.    
 </comment><comment>  
   The grammar generally follows the EBNF of  https://www.w3.org/TR/xpath-31/#id-grammar 
   with the following alterations and caveats:
   * There is no attempt to honour reserved function names (e.g. 'if', 'element')
     and ambiguity will result in using such node tests
   * In most cases where an operator or a 'property' is involved
     and is potentially variable, the value is projected onto an attribute. 
   * The values of XPath constant terms (numbers, strings etc.) are serialized as a
     single text node under the respective named element.
   * Type information (SequenceType, ItemType) is retained as a parsed
     element/child structure, though OccurrenceIndicators are projected as an attribute.
   
   Areas of concern:
   * Some of the binary operators are assumed to be separated by whitespace
      from their operands, when the specification does not require this. 
      This avoids considerable ambiguity complexity when they could be confused with
      parts of names or other constructs. For example 
            '2-2' 
      will not be recognised (will cause a failure) but 
           '2 - 2'
      will. 
      Changing this introduces considerable scope for ambiguity in ANY NCName 
      containing a hyphen - which can easily lead to memory crashes.
    * Support for comments is currently dodgy - colon (':') characters are assumed to
      mark the start of the end of the comment, so unless they are followed by a 
      closing parenthesis, a failure will then ensue.
 </comment><rule name='XPath'><alt><option><nonterminal name='s'/></option><nonterminal name='OPT-Expr'/><option><nonterminal name='s'/></option></alt></rule><rule name='ParamList'><alt><nonterminal name='Param'/><repeat0><alts><alt><option><nonterminal name='s'/></option><literal tmark='-' string=','/><option><nonterminal name='s'/></option><nonterminal name='Param'/></alt></alts></repeat0></alt></rule><rule name='Param'><alt><literal tmark='-' string='$'/><nonterminal name='EQName'/><option><nonterminal name='TypeDeclaration'/></option></alt></rule><rule name='FunctionBody'><alt><nonterminal name='EnclosedExpr'/></alt></rule><rule name='EnclosedExpr'><alt><literal tmark='-' string='{'/><option><nonterminal name='s'/></option><option><nonterminal name='OPT-Expr'/></option><option><nonterminal name='s'/></option><literal tmark='-' string='}'/></alt></rule><rule mark='-' name='OPT-Expr'><alt><nonterminal name='ExprSingle'/></alt><alt><nonterminal name='Expr'/></alt></rule><rule name='Expr'><alt><nonterminal name='ExprSingle'/><repeat1><alts><alt><option><nonterminal name='s'/></option><literal tmark='-' string=','/><option><nonterminal name='s'/></option><nonterminal name='ExprSingle'/></alt></alts></repeat1></alt></rule><rule mark='-' name='ExprSingle'><alt><nonterminal name='ForExpr'/></alt><alt><nonterminal name='LetExpr'/></alt><alt><nonterminal name='QuantifiedExpr'/></alt><alt><nonterminal name='IfExpr'/></alt><alt><nonterminal name='OPT-OrExpr'/></alt></rule><rule name='ForExpr'><alt><nonterminal mark='-' name='SimpleForClause'/><nonterminal name='s'/><literal tmark='-' string='return'/><nonterminal name='s'/><nonterminal name='ExprSingle'/></alt></rule><rule name='SimpleForClause'><alt><literal tmark='-' string='for'/><nonterminal name='s'/><nonterminal name='SimpleForBinding'/><repeat0><alts><alt><option><nonterminal name='s'/></option><literal tmark='-' string=','/><option><nonterminal name='s'/></option><nonterminal name='SimpleForBinding'/></alt></alts></repeat0></alt></rule><rule name='SimpleForBinding'><alt><option><nonterminal name='s'/></option><literal tmark='-' string='$'/><nonterminal name='VarName'/><nonterminal name='s'/><literal tmark='-' string='in'/><nonterminal name='s'/><nonterminal name='ExprSingle'/></alt></rule><rule name='LetExpr'><alt><nonterminal mark='-' name='SimpleLetClause'/><option><nonterminal name='s'/></option><literal tmark='-' string='return'/><nonterminal name='s'/><nonterminal name='ExprSingle'/></alt></rule><rule name='SimpleLetClause'><alt><literal tmark='-' string='let'/><nonterminal name='s'/><nonterminal name='SimpleLetBinding'/><repeat0><alts><alt><option><nonterminal name='s'/></option><literal tmark='-' string=','/><option><nonterminal name='s'/></option><nonterminal name='SimpleLetBinding'/></alt></alts></repeat0></alt></rule><rule name='SimpleLetBinding'><alt><literal tmark='-' string='$'/><nonterminal mark='-' name='VarName'/><option><nonterminal name='s'/></option><literal tmark='-' string=':='/><option><nonterminal name='s'/></option><nonterminal name='ExprSingle'/></alt></rule><rule name='QuantifiedExpr'><alt><nonterminal mark='@' name='QuantOp'/><nonterminal name='s'/><literal tmark='-' string='$'/><nonterminal mark='-' name='VarName'/><nonterminal name='s'/><literal tmark='-' string='in'/><nonterminal name='s'/><nonterminal name='ExprSingle'/><repeat0><alts><alt><option><nonterminal name='s'/></option><literal string=','/><option><nonterminal name='s'/></option><literal tmark='-' string='$'/><nonterminal name='VarName'/><nonterminal name='s'/><literal tmark='-' string='in'/><nonterminal name='s'/><nonterminal name='ExprSingle'/></alt></alts></repeat0><nonterminal name='s'/><literal tmark='-' string='satisfies'/><nonterminal name='s'/><nonterminal name='ExprSingle'/></alt></rule><rule mark='@' name='QuantOp'><alt><literal string='some'/></alt><alt><literal string='every'/></alt></rule><comment>  brackets removed - jwL  </comment><rule name='IfExpr'><alt><literal tmark='-' string='if'/><option><nonterminal name='s'/></option><literal tmark='-' string='('/><option><nonterminal name='s'/></option><nonterminal name='OPT-Expr'/><option><nonterminal name='s'/></option><literal tmark='-' string=')'/><nonterminal name='s'/><literal tmark='-' string='then'/><nonterminal name='s'/><nonterminal name='ExprSingle'/><nonterminal name='s'/><literal tmark='-' string='else'/><nonterminal name='s'/><nonterminal name='ExprSingle'/></alt></rule><rule mark='-' name='OPT-OrExpr'><alt><nonterminal name='OPT-AndExpr'/></alt><alt><nonterminal name='OrExpr'/></alt></rule><rule name='OrExpr'><alt><nonterminal name='OPT-AndExpr'/><nonterminal name='s'/><literal tmark='-' string='or'/><nonterminal name='s'/><nonterminal name='OPT-OrExpr'/></alt></rule><rule mark='-' name='OPT-AndExpr'><alt><nonterminal name='OPT-ComparisonExpr'/></alt><alt><nonterminal name='AndExpr'/></alt></rule><rule name='AndExpr'><alt><nonterminal name='OPT-ComparisonExpr'/><nonterminal name='s'/><literal tmark='-' string='and'/><nonterminal name='s'/><nonterminal name='OPT-AndExpr'/></alt></rule><rule mark='-' name='OPT-ComparisonExpr'><alt><nonterminal name='OPT-StringConcatExpr'/></alt><alt><nonterminal name='ComparisonExpr'/></alt></rule><rule name='ComparisonExpr'><alt><nonterminal name='OPT-StringConcatExpr'/><alts><alt><nonterminal name='s'/><nonterminal mark='@' name='ValueComp'/><nonterminal name='s'/></alt><alt><option><nonterminal name='s'/></option><nonterminal mark='@' name='GeneralComp'/><option><nonterminal name='s'/></option></alt><alt><nonterminal mark='@' name='NodeComp'/></alt></alts><nonterminal name='OPT-StringConcatExpr'/></alt></rule><rule mark='-' name='OPT-StringConcatExpr'><alt><nonterminal name='OPT-RangeExpr'/></alt><alt><nonterminal name='StringConcatExpr'/></alt></rule><rule name='StringConcatExpr'><alt><nonterminal name='OPT-RangeExpr'/><option><nonterminal name='s'/></option><literal tmark='-' string='||'/><option><nonterminal name='s'/></option><nonterminal name='OPT-StringConcatExpr'/></alt></rule><rule mark='-' name='OPT-RangeExpr'><alt><nonterminal name='OPT-AdditiveExpr'/></alt><alt><nonterminal name='RangeExpr'/></alt></rule><rule name='RangeExpr'><alt><nonterminal name='OPT-AdditiveExpr'/><nonterminal name='s'/><literal tmark='-' string='to'/><nonterminal name='s'/><nonterminal name='OPT-AdditiveExpr'/></alt></rule><rule mark='-' name='OPT-AdditiveExpr'><alt><nonterminal name='OPT-MultiplicativeExpr'/></alt><alt><nonterminal name='AdditiveExpr'/></alt></rule><rule name='AdditiveExpr'><alt><nonterminal name='OPT-MultiplicativeExpr'/><nonterminal name='AddOp'/><nonterminal name='OPT-AdditiveExpr'/></alt></rule><rule mark='@' name='AddOp'><alt><option><nonterminal name='s'/></option><literal string='+'/><option><nonterminal name='s'/></option></alt><alt><nonterminal name='s'/><literal string='-'/><nonterminal name='s'/></alt></rule><comment>  Spaces required around '-' to avoid confusion with a hyphen-separated name  </comment><rule mark='-' name='OPT-MultiplicativeExpr'><alt><nonterminal name='OPT-UnionExpr'/></alt><alt><nonterminal name='MultiplicativeExpr'/></alt></rule><rule name='MultiplicativeExpr'><alt><nonterminal name='OPT-UnionExpr'/><nonterminal name='MultOp'/><nonterminal name='OPT-MultiplicativeExpr'/></alt></rule><rule mark='@' name='MultOp'><alt><option><nonterminal name='s'/></option><literal string='*'/><option><nonterminal name='s'/></option></alt><alt><nonterminal name='s'/><alts><alt><literal string='div'/></alt><alt><literal string='idiv'/></alt><alt><literal string='mod'/></alt></alts><nonterminal name='s'/></alt></rule><rule mark='-' name='OPT-UnionExpr'><alt><nonterminal name='OPT-IntersectExceptExpr'/></alt><alt><nonterminal name='UnionExpr'/></alt></rule><rule name='UnionExpr'><alt><nonterminal name='OPT-IntersectExceptExpr'/><alts><alt><nonterminal name='s'/><literal tmark='-' string='union'/><nonterminal name='s'/></alt><alt><option><nonterminal name='s'/></option><literal tmark='-' string='|'/><option><nonterminal name='s'/></option></alt></alts><nonterminal name='OPT-UnionExpr'/></alt></rule><rule mark='-' name='OPT-IntersectExceptExpr'><alt><nonterminal name='OPT-InstanceofExpr'/></alt><alt><nonterminal name='IntersectExceptExpr'/></alt></rule><rule name='IntersectExceptExpr'><alt><nonterminal name='OPT-InstanceofExpr'/><nonterminal name='s'/><nonterminal name='IntersectOp'/><nonterminal name='s'/><nonterminal name='OPT-IntersectExceptExpr'/></alt></rule><rule mark='@' name='IntersectOp'><alt><literal string='intersect'/></alt><alt><literal string='except'/></alt></rule><rule mark='-' name='OPT-InstanceofExpr'><alt><nonterminal name='OPT-TreatExpr'/></alt><alt><nonterminal name='InstanceofExpr'/></alt></rule><rule name='InstanceofExpr'><alt><nonterminal name='OPT-TreatExpr'/><alts><alt><nonterminal name='s'/><literal tmark='-' string='instance'/><nonterminal name='s'/><literal tmark='-' string='of'/><nonterminal name='s'/><nonterminal name='SequenceType'/></alt></alts></alt></rule><rule mark='-' name='OPT-TreatExpr'><alt><nonterminal name='OPT-CastableExpr'/></alt><alt><nonterminal name='TreatExpr'/></alt></rule><rule name='TreatExpr'><alt><nonterminal name='OPT-CastableExpr'/><alts><alt><nonterminal name='s'/><literal tmark='-' string='treat'/><nonterminal name='s'/><literal tmark='-' string='as'/><nonterminal name='s'/><nonterminal name='SequenceType'/></alt></alts></alt></rule><rule mark='-' name='OPT-CastableExpr'><alt><nonterminal name='OPT-CastExpr'/></alt><alt><nonterminal name='CastableExpr'/></alt></rule><rule name='CastableExpr'><alt><nonterminal name='OPT-CastExpr'/><alts><alt><nonterminal name='s'/><literal tmark='-' string='castable'/><nonterminal name='s'/><literal tmark='-' string='as'/><nonterminal name='s'/><nonterminal name='SequenceType'/></alt></alts></alt></rule><rule mark='-' name='OPT-CastExpr'><alt><nonterminal name='OPT-ArrowExpr'/></alt><alt><nonterminal name='CastExpr'/></alt></rule><rule name='CastExpr'><alt><nonterminal name='OPT-ArrowExpr'/><alts><alt><nonterminal name='s'/><literal tmark='-' string='cast'/><nonterminal name='s'/><literal tmark='-' string='as'/><nonterminal name='s'/><nonterminal name='SingleType'/></alt></alts></alt></rule><rule mark='-' name='OPT-ArrowExpr'><alt><nonterminal name='OPT-UnaryExpr'/></alt><alt><nonterminal name='ArrowExpr'/></alt></rule><rule name='ArrowExpr'><alt><nonterminal name='OPT-UnaryExpr'/><repeat1><alts><alt><option><nonterminal name='s'/></option><literal tmark='-' string='=&gt;'/><option><nonterminal name='s'/></option><nonterminal name='ArrowFunctionSpecifier'/><nonterminal name='ArgumentList'/></alt></alts></repeat1></alt></rule><rule mark='-' name='OPT-UnaryExpr'><alt><nonterminal name='ValueExpr'/></alt><alt><nonterminal name='UnaryExpr'/></alt></rule><rule name='UnaryExpr'><alt><nonterminal name='UnaryOp'/><nonterminal name='OPT-UnaryExpr'/></alt></rule><rule mark='@' name='UnaryOp'><alt><literal string='-'/></alt><alt><literal string='+'/></alt></rule><rule mark='-' name='ValueExpr'><alt><nonterminal name='OPT-SimpleMapExpr'/></alt></rule><rule name='GeneralComp'><alt><literal string='='/></alt><alt><literal string='!='/></alt><alt><literal string='&lt;'/></alt><alt><literal string='&lt;='/></alt><alt><literal string='&gt;'/></alt><alt><literal string='&gt;='/></alt></rule><rule name='ValueComp'><alt><literal string='eq'/></alt><alt><literal string='ne'/></alt><alt><literal string='lt'/></alt><alt><literal string='le'/></alt><alt><literal string='gt'/></alt><alt><literal string='ge'/></alt></rule><rule name='NodeComp'><alt><nonterminal name='s'/><literal string='is'/><nonterminal name='s'/></alt><alt><option><nonterminal name='s'/></option><alts><alt><literal string='&lt;&lt;'/></alt><alt><literal string='&gt;&gt;'/></alt></alts><option><nonterminal name='s'/></option></alt></rule><rule mark='-' name='OPT-SimpleMapExpr'><alt><nonterminal name='PathExpr'/></alt><alt><nonterminal name='SimpleMapExpr'/></alt></rule><rule name='SimpleMapExpr'><alt><nonterminal name='PathExpr'/><alts><alt><option><nonterminal name='s'/></option><literal tmark='-' string='!'/><option><nonterminal name='s'/></option><nonterminal name='OPT-SimpleMapExpr'/></alt></alts></alt></rule><rule mark='-' name='PathExpr'><alt><nonterminal name='RootExpr'/></alt><alt><nonterminal name='OPT-RelativePathExpr'/></alt></rule><rule name='RootExpr'><alt><nonterminal name='root'/><option><alts><alt><option><nonterminal name='s'/></option><nonterminal name='OPT-RelativePathExpr'/></alt></alts></option></alt><alt><nonterminal name='root-descendant'/><option><nonterminal name='s'/></option><nonterminal name='OPT-RelativePathExpr'/></alt></rule><rule mark='@' name='root'><alt><literal string='/'/></alt></rule><rule mark='@' name='root-descendant'><alt><literal string='//'/></alt></rule><rule mark='-' name='OPT-RelativePathExpr'><alt><nonterminal name='StepExpr'/></alt><alt><nonterminal name='RelativePathExpr'/></alt></rule><rule name='RelativePathExpr'><alt><nonterminal name='StepExpr'/><alts><alt><option><nonterminal name='s'/></option><nonterminal name='step'/><option><nonterminal name='s'/></option><nonterminal name='OPT-RelativePathExpr'/></alt></alts></alt></rule><rule mark='@' name='step'><alt><literal string='/'/></alt><alt><literal string='//'/></alt></rule><rule mark='-' name='StepExpr'><alt><nonterminal name='OPT-PostfixExpr'/></alt><alt><nonterminal name='OPT-AxisStep'/></alt></rule><rule mark='-' name='OPT-AxisStep'><alt><nonterminal name='DirectedStep'/></alt><alt><nonterminal name='AxisStep'/></alt></rule><rule name='AxisStep'><alt><nonterminal name='DirectedStep'/><nonterminal name='PredicateList'/></alt></rule><rule mark='-' name='DirectedStep'><alt><nonterminal name='ReverseStep'/></alt><alt><nonterminal name='OPT-ForwardStep'/></alt></rule><rule mark='-' name='OPT-ForwardStep'><alt><nonterminal name='AbbrevForwardStep'/></alt><alt><nonterminal name='ForwardStep'/></alt></rule><rule name='ForwardStep'><alt><nonterminal mark='@' name='ForwardAxis'/><nonterminal name='NodeTest'/></alt></rule><rule name='ForwardAxis'><alt><literal string='child::'/></alt><alt><literal string='descendant::'/></alt><alt><literal string='attribute::'/></alt><alt><literal string='self::'/></alt><alt><literal string='descendant-or-self::'/></alt><alt><literal string='following-sibling::'/></alt><alt><literal string='following::'/></alt><alt><literal string='namespace::'/></alt></rule><rule mark='-' name='AbbrevForwardStep'><alt><nonterminal name='ChildStep'/></alt><alt><nonterminal name='AttributeStep'/></alt></rule><rule name='ChildStep'><alt><nonterminal mark='-' name='NodeTest'/></alt></rule><rule name='AttributeStep'><alt><literal tmark='-' string='@'/><nonterminal mark='-' name='NodeTest'/></alt></rule><rule name='ReverseStep'><alt><nonterminal mark='@' name='ReverseAxis'/><nonterminal name='NodeTest'/></alt><alt><nonterminal mark='@' name='AbbrevReverseStep'/></alt></rule><rule name='ReverseAxis'><alt><literal string='parent::'/></alt><alt><literal string='ancestor::'/></alt><alt><literal string='preceding-sibling::'/></alt><alt><literal string='preceding::'/></alt><alt><literal string='ancestor-or-self::'/></alt></rule><rule name='AbbrevReverseStep'><alt><literal string='..'/></alt></rule><rule mark='-' name='NodeTest'><alt><nonterminal name='KindTest'/></alt><alt><nonterminal name='NameTest'/></alt></rule><rule mark='-' name='NameTest'><alt><nonterminal name='EQName'/></alt><alt><nonterminal name='Wildcard'/></alt></rule><rule mark='-' name='OPT-PostfixExpr'><alt><nonterminal name='PrimaryExpr'/></alt><alt><nonterminal name='PostfixExpr'/></alt></rule><rule name='PostfixExpr'><alt><nonterminal name='PrimaryExpr'/><repeat1><alts><alt><nonterminal name='Predicate'/></alt><alt><nonterminal name='ArgumentList'/></alt><alt><nonterminal name='Lookup'/></alt></alts></repeat1></alt></rule><rule name='ArgumentList'><alt><option><nonterminal name='s'/></option><literal tmark='-' string='('/><option><nonterminal name='s'/></option><option><alts><alt><nonterminal mark='-' name='Argument'/><repeat0><alts><alt><option><nonterminal name='s'/></option><literal tmark='-' string=','/><option><nonterminal name='s'/></option><nonterminal mark='-' name='Argument'/></alt></alts></repeat0></alt></alts></option><option><nonterminal name='s'/></option><literal tmark='-' string=')'/></alt></rule><rule name='PredicateList'><alt><repeat1><nonterminal mark='-' name='Predicate'/></repeat1></alt></rule><rule name='Predicate'><alt><option><nonterminal name='s'/></option><literal tmark='-' string='['/><option><nonterminal name='s'/></option><nonterminal name='OPT-Expr'/><option><nonterminal name='s'/></option><literal tmark='-' string=']'/></alt></rule><rule name='Lookup'><alt><option><nonterminal name='s'/></option><literal tmark='-' string='?'/><option><nonterminal name='s'/></option><nonterminal name='KeySpecifier'/></alt></rule><rule name='KeySpecifier'><alt><nonterminal name='NCName'/></alt><alt><nonterminal name='IntegerLiteral'/></alt><alt><nonterminal name='ParenthesizedExpr'/></alt><alt><literal string='*'/></alt></rule><rule mark='-' name='ArrowFunctionSpecifier'><alt><nonterminal name='EQName'/></alt><alt><nonterminal name='VarRef'/></alt><alt><nonterminal name='ParenthesizedExpr'/></alt></rule><rule mark='-' name='PrimaryExpr'><alt><nonterminal name='Literal'/></alt><alt><nonterminal name='VarRef'/></alt><alt><nonterminal name='ParenthesizedExpr'/></alt><alt><nonterminal name='ContextItemExpr'/></alt><alt><nonterminal name='FunctionCall'/></alt><alt><nonterminal name='FunctionItemExpr'/></alt><alt><nonterminal name='MapConstructor'/></alt><alt><nonterminal name='ArrayConstructor'/></alt><alt><nonterminal name='UnaryLookup'/></alt></rule><rule mark='-' name='Literal'><alt><nonterminal name='NumericLiteral'/></alt><alt><nonterminal name='StringLiteral'/></alt></rule><rule mark='-' name='NumericLiteral'><alt><nonterminal name='IntegerLiteral'/></alt><alt><nonterminal name='DecimalLiteral'/></alt><alt><nonterminal name='DoubleLiteral'/></alt></rule><rule name='VarRef'><alt><literal tmark='-' string='$'/><nonterminal mark='-' name='VarName'/></alt></rule><rule name='VarName'><alt><nonterminal name='EQName'/></alt></rule><rule mark='-' name='ParenthesizedExpr'><alt><literal tmark='-' string='('/><option><nonterminal name='s'/></option><option><nonterminal name='OPT-Expr'/></option><option><nonterminal name='s'/></option><literal tmark='-' string=')'/></alt></rule><rule name='ContextItemExpr'><alt><literal tmark='-' string='.'/></alt></rule><rule name='FunctionCall'><alt><nonterminal mark='-' name='FunctionEQName'/><nonterminal name='ArgumentList'/></alt></rule><rule mark='-' name='Argument'><alt><nonterminal name='ExprSingle'/></alt><alt><nonterminal name='ArgumentPlaceholder'/></alt></rule><rule name='ArgumentPlaceholder'><alt><literal tmark='-' string='?'/></alt></rule><rule mark='-' name='FunctionItemExpr'><alt><nonterminal name='NamedFunctionRef'/></alt><alt><nonterminal name='InlineFunctionExpr'/></alt></rule><rule name='NamedFunctionRef'><alt><nonterminal mark='-' name='FunctionEQName'/><literal tmark='-' string='#'/><nonterminal name='IntegerLiteral'/></alt></rule><rule name='InlineFunctionExpr'><alt><literal tmark='-' string='function'/><option><nonterminal name='s'/></option><literal tmark='-' string='('/><option><nonterminal name='s'/></option><option><nonterminal name='ParamList'/></option><option><nonterminal name='s'/></option><literal tmark='-' string=')'/><option><alts><alt><nonterminal name='s'/><literal tmark='-' string='as'/><nonterminal name='s'/><nonterminal name='SequenceType'/></alt></alts></option><option><nonterminal name='s'/></option><nonterminal name='FunctionBody'/></alt></rule><rule name='MapConstructor'><alt><literal tmark='-' string='map'/><option><nonterminal name='s'/></option><literal tmark='-' string='{'/><option><nonterminal name='s'/></option><option><alts><alt><nonterminal name='MapConstructorEntry'/><repeat0><alts><alt><option><nonterminal name='s'/></option><literal tmark='-' string=','/><option><nonterminal name='s'/></option><nonterminal name='MapConstructorEntry'/></alt></alts></repeat0></alt></alts></option><option><nonterminal name='s'/></option><literal tmark='-' string='}'/></alt></rule><rule name='MapConstructorEntry'><alt><nonterminal name='MapKeyExpr'/><option><nonterminal name='s'/></option><literal tmark='-' string=':'/><option><nonterminal name='s'/></option><nonterminal name='MapValueExpr'/></alt></rule><rule mark='-' name='MapKeyExpr'><alt><nonterminal name='ExprSingle'/></alt></rule><rule mark='-' name='MapValueExpr'><alt><nonterminal name='ExprSingle'/></alt></rule><rule name='ArrayConstructor'><alt><nonterminal name='SquareArrayConstructor'/></alt><alt><nonterminal name='CurlyArrayConstructor'/></alt></rule><rule mark='-' name='SquareArrayConstructor'><alt><literal tmark='-' string='['/><option><nonterminal name='s'/></option><option><alts><alt><nonterminal name='ExprSingle'/><repeat0><alts><alt><option><nonterminal name='s'/></option><literal tmark='-' string=','/><option><nonterminal name='s'/></option><nonterminal name='ExprSingle'/></alt></alts></repeat0></alt></alts></option><option><nonterminal name='s'/></option><literal tmark='-' string=']'/></alt></rule><rule mark='-' name='CurlyArrayConstructor'><alt><literal tmark='-' string='array'/><option><nonterminal name='s'/></option><literal tmark='-' string='{'/><option><nonterminal name='s'/></option><option><nonterminal name='OPT-Expr'/></option><option><nonterminal name='s'/></option><literal tmark='-' string='}'/></alt></rule><rule name='UnaryLookup'><alt><option><nonterminal name='s'/></option><literal tmark='-' string='?'/><option><nonterminal name='s'/></option><nonterminal name='KeySpecifier'/></alt></rule><rule name='SingleType'><alt><nonterminal name='SimpleTypeName'/><option><nonterminal name='s'/></option><option><literal string='?'/></option></alt></rule><rule name='TypeDeclaration'><alt><nonterminal name='s'/><literal tmark='-' string='as'/><nonterminal name='s'/><nonterminal name='SequenceType'/></alt></rule><rule name='SequenceType'><alt><literal string='empty-sequence()'/></alt><alt><nonterminal mark='-' name='ItemType'/><option><alts><alt><option><nonterminal name='s'/></option><nonterminal name='OccurrenceIndicator'/></alt></alts></option></alt></rule><rule mark='@' name='OccurrenceIndicator'><alt><literal string='?'/></alt><alt><literal string='*'/></alt><alt><literal string='+'/></alt></rule><rule name='ItemType'><alt><nonterminal name='KindTest'/></alt><alt><literal string='item()'/></alt><alt><nonterminal name='FunctionTest'/></alt><alt><nonterminal name='MapTest'/></alt><alt><nonterminal name='ArrayTest'/></alt><alt><nonterminal name='AtomicOrUnionType'/></alt><alt><nonterminal name='ParenthesizedItemType'/></alt></rule><rule name='AtomicOrUnionType'><alt><nonterminal name='EQName'/></alt></rule><rule mark='-' name='KindTest'><alt><nonterminal name='DocumentTest'/></alt><alt><nonterminal name='ElementTest'/></alt><alt><nonterminal name='AttributeTest'/></alt><alt><nonterminal name='SchemaElementTest'/></alt><alt><nonterminal name='SchemaAttributeTest'/></alt><alt><nonterminal name='PITest'/></alt><alt><nonterminal name='CommentTest'/></alt><alt><nonterminal name='TextTest'/></alt><alt><nonterminal name='NamespaceNodeTest'/></alt><alt><nonterminal name='AnyKindTest'/></alt></rule><rule name='AnyKindTest'><alt><literal tmark='-' string='node()'/></alt></rule><rule name='DocumentTest'><alt><literal tmark='-' string='document-node('/><option><alts><alt><nonterminal name='ElementTest'/></alt><alt><nonterminal name='SchemaElementTest'/></alt></alts></option><literal tmark='-' string=')'/></alt></rule><rule name='TextTest'><alt><literal tmark='-' string='text()'/></alt></rule><rule name='CommentTest'><alt><literal tmark='-' string='comment()'/></alt></rule><rule name='NamespaceNodeTest'><alt><literal tmark='-' string='namespace-node()'/></alt></rule><rule name='PITest'><alt><literal tmark='-' string='processing-instruction('/><option><alts><alt><nonterminal name='NCName'/></alt><alt><nonterminal name='StringLiteral'/></alt></alts></option><literal tmark='-' string=')'/></alt></rule><rule name='AttributeTest'><alt><literal tmark='-' string='attribute('/><option><alts><alt><nonterminal name='AttribNameOrWildcard'/><option><alts><alt><literal string=','/><option><nonterminal name='s'/></option><nonterminal name='TypeName'/></alt></alts></option></alt></alts></option><literal tmark='-' string=')'/></alt></rule><rule name='AttribNameOrWildcard'><alt><nonterminal name='AttributeName'/></alt><alt><literal string='*'/></alt></rule><rule name='SchemaAttributeTest'><alt><literal tmark='-' string='schema-attribute('/><nonterminal name='AttributeDeclaration'/><literal tmark='-' string=')'/></alt></rule><rule name='AttributeDeclaration'><alt><nonterminal name='AttributeName'/></alt></rule><rule name='ElementTest'><alt><literal tmark='-' string='element('/><option><alts><alt><nonterminal name='ElementNameOrWildcard'/><option><alts><alt><literal string=','/><option><nonterminal name='s'/></option><nonterminal name='TypeName'/><option><literal string='?'/></option></alt></alts></option></alt></alts></option><literal tmark='-' string=')'/></alt></rule><rule mark='-' name='ElementNameOrWildcard'><alt><nonterminal name='ElementName'/></alt><alt><nonterminal name='ElementWildcard'/></alt></rule><rule name='ElementWildcard'><alt><literal tmark='-' string='*'/></alt></rule><rule name='SchemaElementTest'><alt><literal tmark='-' string='schema-element('/><nonterminal name='ElementDeclaration'/><literal tmark='-' string=')'/></alt></rule><rule name='ElementDeclaration'><alt><nonterminal name='ElementName'/></alt></rule><rule name='AttributeName'><alt><nonterminal name='EQName'/></alt></rule><rule name='ElementName'><alt><nonterminal name='EQName'/></alt></rule><rule name='SimpleTypeName'><alt><nonterminal name='EQName'/></alt></rule><rule name='TypeName'><alt><nonterminal name='EQName'/></alt></rule><rule name='FunctionTest'><alt><nonterminal name='AnyFunctionTest'/></alt><alt><nonterminal name='TypedFunctionTest'/></alt></rule><rule name='AnyFunctionTest'><alt><literal tmark='-' string='function(*)'/></alt></rule><rule name='TypedFunctionTest'><alt><literal tmark='-' string='function('/><option><alts><alt><nonterminal name='SequenceType'/><repeat0><alts><alt><option><nonterminal name='s'/></option><literal tmark='-' string=','/><option><nonterminal name='s'/></option><nonterminal name='SequenceType'/></alt></alts></repeat0></alt></alts></option><literal tmark='-' string=')'/><nonterminal name='s'/><literal tmark='-' string='as'/><nonterminal name='s'/><nonterminal name='SequenceType'/></alt></rule><rule name='MapTest'><alt><nonterminal name='AnyMapTest'/></alt><alt><nonterminal name='TypedMapTest'/></alt></rule><rule name='AnyMapTest'><alt><literal tmark='-' string='map(*)'/></alt></rule><rule name='TypedMapTest'><alt><literal tmark='-' string='map('/><option><nonterminal name='s'/></option><nonterminal name='AtomicOrUnionType'/><option><nonterminal name='s'/></option><literal tmark='-' string=','/><option><nonterminal name='s'/></option><nonterminal name='SequenceType'/><option><nonterminal name='s'/></option><literal tmark='-' string=')'/></alt></rule><rule name='ArrayTest'><alt><nonterminal name='AnyArrayTest'/></alt><alt><nonterminal name='TypedArrayTest'/></alt></rule><rule name='AnyArrayTest'><alt><literal tmark='-' string='array(*)'/></alt></rule><rule name='TypedArrayTest'><alt><literal tmark='-' string='array('/><option><nonterminal name='s'/></option><nonterminal name='SequenceType'/><option><nonterminal name='s'/></option><literal tmark='-' string=')'/></alt></rule><rule mark='-' name='ParenthesizedItemType'><alt><literal tmark='-' string='('/><option><nonterminal name='s'/></option><nonterminal name='ItemType'/><option><nonterminal name='s'/></option><literal tmark='-' string=')'/></alt></rule><rule name='FunctionEQName'><alt><nonterminal name='FunctionName'/></alt><alt><nonterminal name='URIQualifiedName'/></alt></rule><rule mark='-' name='EQName'><alt><nonterminal name='QName'/></alt><alt><nonterminal name='URIQualifiedName'/></alt></rule><rule mark='-' name='QName'><alt><nonterminal name='FunctionName'/></alt></rule><rule mark='-' name='FunctionName'><alt><nonterminal name='QNameToken'/></alt></rule><rule name='StringLiteral'><alt><literal tmark='-' string='"'/><repeat0><alts><alt><nonterminal name='EscapeQuot'/></alt><alt><exclusion><member string='"'/></exclusion></alt></alts></repeat0><literal tmark='-' string='"'/></alt><alt><literal tmark='-' string='&apos;'/><repeat0><alts><alt><nonterminal name='EscapeApos'/></alt><alt><exclusion><member string='&apos;'/></exclusion></alt></alts></repeat0><literal tmark='-' string='&apos;'/></alt></rule><rule name='IntegerLiteral'><alt><nonterminal mark='-' name='Digits'/></alt></rule><rule name='DecimalLiteral'><alt><literal string='.'/><nonterminal mark='-' name='Digits'/></alt><alt><nonterminal mark='-' name='Digits'/><literal string='.'/><repeat0><inclusion><member from='0' to='9'/></inclusion></repeat0></alt></rule><rule name='DoubleLiteral'><alt><alts><alt><literal string='.'/><nonterminal mark='-' name='Digits'/></alt><alt><nonterminal mark='-' name='Digits'/><option><alts><alt><literal string='.'/><repeat0><inclusion><member from='0' to='9'/></inclusion></repeat0></alt></alts></option></alt></alts><inclusion><member string='e'/><member string='E'/></inclusion><option><inclusion><member string='+'/><member string='-'/></inclusion></option><nonterminal mark='-' name='Digits'/></alt></rule><rule mark='-' name='URIQualifiedName'><alt><nonterminal name='BracedURILiteral'/><nonterminal mark='@' name='LocalPart'/></alt></rule><rule mark='-' name='BracedURILiteral'><alt><literal tmark='-' string='Q{'/><nonterminal name='URI'/><literal tmark='-' string='}'/></alt></rule><rule mark='@' name='URI'><alt><repeat0><exclusion><member string='{'/><member string='}'/></exclusion></repeat0></alt></rule><rule name='EscapeQuot'><alt><literal string='""'/></alt></rule><rule name='EscapeApos'><alt><literal string='&apos;&apos;'/></alt></rule><rule mark='-' name='QNameToken'><alt><nonterminal name='PrefixedName'/></alt><alt><nonterminal name='UnprefixedName'/></alt></rule><rule name='PrefixedName'><alt><nonterminal mark='@' name='Prefix'/><literal tmark='-' string=':'/><nonterminal mark='@' name='LocalPart'/></alt></rule><rule name='UnprefixedName'><alt><nonterminal mark='@' name='LocalPart'/></alt></rule><rule name='Prefix'><alt><nonterminal name='NCName'/></alt></rule><rule name='LocalPart'><alt><nonterminal name='NCName'/></alt></rule><rule mark='-' name='NCName'><alt><nonterminal mark='@' name='Name'/></alt></rule><rule mark='-' name='NameStartChar'><alt><inclusion><member from='A' to='Z'/></inclusion></alt><alt><literal string='_'/></alt><alt><inclusion><member from='a' to='z'/></inclusion></alt></rule><rule mark='-' name='NameChar'><alt><nonterminal name='NameStartChar'/></alt><alt><literal string='-'/></alt><alt><literal string='.'/></alt><alt><inclusion><member from='0' to='9'/></inclusion></alt></rule><rule name='Name'><alt><nonterminal name='NameStartChar'/><repeat0><nonterminal name='NameChar'/></repeat0></alt></rule><rule mark='-' name='s'><alt><repeat1><alts><alt><nonterminal name='whitespace'/></alt><alt><nonterminal name='comment'/></alt></alts></repeat1></alt></rule><rule mark='-' name='whitespace'><alt><inclusion tmark='-'><member string=' '/><member hex='9'/><member hex='a'/><member hex='d'/></inclusion></alt></rule><rule name='comment'><alt><literal tmark='-' string='(:'/><repeat0><alts><alt><nonterminal name='cchar'/></alt><alt><nonterminal name='comment'/></alt></alts></repeat0><literal tmark='-' string=':)'/></alt></rule><rule mark='-' name='cchar'><alt><exclusion><member string=':'/></exclusion></alt></rule><rule name='Wildcard'><alt><literal string='*'/></alt><alt><nonterminal name='NCName'/><literal string=':'/><literal string='*'/></alt><alt><literal string='*'/><literal string=':'/><nonterminal name='NCName'/></alt><alt><nonterminal name='BracedURILiteral'/><literal string='*'/></alt></rule><rule name='Digits'><alt><repeat1><inclusion><member from='0' to='9'/></inclusion></repeat1></alt></rule></ixml>