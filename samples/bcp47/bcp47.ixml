{ An Invisible XML grammar for https://tools.ietf.org/rfc/bcp/bcp47.txt }
{ Transliterated by Norm Tovey-Walsh, 14 April 2022 }

Language-Tag  = langtag             { normal language tags }
                ; privateuse        { private use tag }
                ; grandfathered .   { grandfathered tags }

-langtag      = language,
                (-"-", script)?,
                (-"-", region)?,
                (-"-", variant)*,
                (-"-", extension)*,
                (-"-", privateuse)? .

language      = ALPHA2-3,           { shortest ISO 639 code }
                (-"-", extlang)?    { sometimes followed by }
                                    { extended language subtags }
              ; ALPHA4              { or reserved for future use }
              ; ALPHA5-8 .          { or registered language subtag }

extlang       = ALPHA3,             { selected ISO 639 codes }
                ("-", ALPHA3,
                 ("-", ALPHA3)?)? . { permanently reserved }

script        = ALPHA4 .            { ISO 15924 code }

region        = ALPHA, ALPHA        { ISO 3166-1 code }
              ; DIGIT3 .            { UN M.49 code }

variant       = alphanum5-8         { registered variants }
              ; (DIGIT, alphanum3) .

extension     = singleton, ("-", alphanum2-8)+ .

                                    { Single alphanumerics }
                                    { "x" reserved for private use }
singleton     = DIGIT               { 0 - 9 }
              ; [#41-#57]           { A - W }
              ; [#59-#5A]           { Y - Z }
              ; [#61-#77]           { a - w }
              ; [#79-#7A] .         { y - z }

privateuse    = "x", ("-", alphanum1-8)+ .

-grandfathered = irregular          { non-redundant tags registered }
               ; regular .          { during the RFC 3066 era }

irregular     = "en-GB-oed"         { irregular tags do not match }
              ; "i-ami"             { the 'langtag' production and }
              ; "i-bnn"             { would not otherwise be }
              ; "i-default"         { considered 'well-formed' }
              ; "i-enochian"        { These tags are all valid, }
              ; "i-hak"             { but most are deprecated }
              ; "i-klingon"         { in favor of more modern }
              ; "i-lux"             { subtags or subtag }
              ; "i-mingo"           { combination }
              ; "i-navajo"
              ; "i-pwn"
              ; "i-tao"
              ; "i-tay"
              ; "i-tsu"
              ; "sgn-BE-FR"
              ; "sgn-BE-NL"
              ; "sgn-CH-DE" .

regular       = "art-lojban"        { these tags match the 'langtag' }
              ; "cel-gaulish"       { production, but their subtags }
              ; "no-bok"            { are not extended language }
              ; "no-nyn"            { or variant subtags: their meaning }
              ; "zh-guoyu"          { is defined by their registration }
              ; "zh-hakka"          { and all of these are deprecated }
              ; "zh-min"            { in favor of a more modern }
              ; "zh-min-nan"        { subtag or sequence of subtags }
              ; "zh-xiang" .

-alphanum     = (ALPHA; DIGIT).     { letters and numbers }

{ From RFC 5234 }
-ALPHA        = ["A"-"Z"; "a"-"z"] .
-DIGIT        = ["0"-"9"] .

{ Shortcuts to simplify this grammar in Invisible XML }

-DIGIT3       = DIGIT, DIGIT, DIGIT .
-ALPHA3       = ALPHA, ALPHA, ALPHA .
-ALPHA4       = ALPHA, ALPHA, ALPHA, ALPHA .
-ALPHA2-3     = ALPHA, ALPHA, ALPHA? .
-ALPHA5-8     = ALPHA, ALPHA, ALPHA, ALPHA, ALPHA,
                (ALPHA, (ALPHA, ALPHA?)?)? .
-alphanum3    = alphanum, alphanum, alphanum .
-alphanum1-8  = alphanum, (alphanum, (alphanum, (alphanum, (alphanum, 
                (alphanum, (alphanum, alphanum?)?)?)?)?)?)? .
-alphanum2-8  = alphanum, alphanum, (alphanum, (alphanum, (alphanum, 
                (alphanum, (alphanum, alphanum?)?)?)?)?)? .
-alphanum5-8  = alphanum, alphanum, alphanum, alphanum, alphanum, 
                (alphanum, (alphanum, alphanum?)?)? .
