         ixml: prolog, rule+s, s.

       prolog: s, ppragma+s, s.
     -ppragma: pragma, s, -".".

           -s: (whitespace; comment)*.
  -whitespace: -[Zs]; tab; lf; cr.
         -tab: -#9.
          -lf: -#a.
          -cr: -#d.
      comment: -"{", (cchar; comment)*, -"}".
       -cchar: ~["{}"].

         rule: annotation, name, s, -["=:"], s, -alts, -".".
  -annotation: (pragma, sp?), (mark, sp)?.
          -sp: (s; pragma)*.
        @mark: ["@^-"].
         alts: alt+(-[";|"], s).
          alt: term*(-",", s).
        -term: factor;
               option;
               repeat0;
               repeat1.
      -factor: terminal;
               nonterminal;
               -"(", s, alts, -")", s.
      repeat0: factor, -"*", s, sep?.
      repeat1: factor, -"+", s, sep?.
       option: factor, -"?", s.
          sep: factor.
  nonterminal: annotation, name, s.

    -terminal: literal; 
               charset.
      literal: quoted;
               encoded.
      -quoted: tannotation, -string.

        @name: namestart, namefollower*.
   -namestart: ["_"; L].
-namefollower: namestart; ["-.·‿⁀"; Nd; Mn].

       @tmark: ["^-"].
      @string: -'"', dchar+, -'"', s;
                     -"'", schar+, -"'", s.
        dchar: ~['"'; #a; #d];
               '"', -'"'. {all characters except line breaks; quotes must be doubled}
        schar: ~["'"; #a; #d];
               "'", -"'". {all characters except line breaks; quotes must be doubled}
     -encoded: tannotation, -"#", @hex, s.
          hex: ["0"-"9"; "a"-"f"; "A"-"F"]+.

     -charset: inclusion; 
               exclusion.
    inclusion: tannotation,          set.
    exclusion: tannotation, -"~", s, set.
         -set: -"[", s,  member*(-[";|"], s), -"]", s.
      -member: literal;
               range;
               class.
        range: from, -"-", s, to.
        @from: character.
          @to: character.
   -character: -'"', dchar, -'"', s;
               -"'", schar, -"'", s;
               "#", hex, s.
        class: code, s.
        @code: capital, letter?.
     -capital: ["A"-"Z"].
      -letter: ["a"-"z"].

       pragma: -"[", @pmark?, @pname, (s, pragma-data)?, -"]". 
       @pname: -QName; -UQName. 
       @pmark: ["@^?"].
  pragma-data: (-pragma-chars; -bracket-pair)*. 
-pragma-chars: ~["[]"]*.
-bracket-pair: '[', -pragma-data, ']'.

       -QName: -name, ':', -name.
      -UQName: 'Q{', -ns-name, '}', -name.
     -ns-name: ~["{}"; '"'; "'"]* 

